name: Build y Test BDfy
on:
  push:
    branches:
      - main
      - main-dev
      - test-actions
  pull_request:
    branches:
      - main
      - main-dev
      - test-actions

jobs:
  backend:
    name: Build & Test .NET Backend
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      # Configura .NET 9.0 para compilar y testear el backend
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'
      - name: Restore dependencies # Restaura dependencias del backend y los tests
        run: dotnet restore ./app/BDfy.sln
      - name: Build # Compila el backend y los tests
        run: dotnet build --no-restore ./app/BDfy.sln
      - name: Test # Ejecuta los Bdfy.Tests
        run: dotnet test --no-build --verbosity normal ./app/Bdfy.Tests/Bdfy.Tests.csproj

  frontend:
    name: Build & Test React Frontend
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      # Configura Node.js para compilar y testear el frontend
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
      - name: Install dependencies # Instala dependencias del frontend
        run: |
          cd app/BDfy-Frontend
          npm ci
      - name: Build # Compila el frontend
        run: |
          cd app/BDfy-Frontend
          npm run build
      - name: Test # Ejecuta los tests del frontend
        run: |
          cd app/BDfy-Frontend
          npm test -- --watchAll=false || true

  docker:
    name: Build Docker Images
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      # Construye la imagen Docker del backend
      - name: Build backend Docker image
        run: docker build -t bdfy-backend ./app/Bdfy
      # Construye la imagen Docker del frontend
      - name: Build frontend Docker image
        run: docker build -t bdfy-frontend ./app/BDfy-Frontend
